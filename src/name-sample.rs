extern crate fuzz_search;

fn main() {
    let names = vec![
        "Jonathan",
        "Olivia",
        "Ruby",
        "Emily",
        "Grace",
        "Jessica",
        "Chloe",
        "Sophie",
        "Lily",
        "Amelia",
        "Evie",
        "Mia",
        "Ella",
        "Charlotte",
        "Lucy",
        "Megan",
        "Ellie",
        "Isabelle",
        "Isabella",
        "Hannah",
        "Katie",
        "Ava",
        "Holly",
        "Summer",
        "Millie",
        "Daisy",
        "Phoebe",
        "Freya",
        "Abigail",
        "Poppy",
        "Erin",
        "Emma",
        "Molly",
        "Imogen",
        "Amy",
        "Jasmine",
        "Isla",
        "Scarlett",
        "Leah",
        "Sophia",
        "Elizabeth",
        "Eva",
        "Brooke",
        "Matilda",
        "Caitlin",
        "Keira",
        "Alice",
        "Lola",
        "Lilly",
        "Amber",
        "Isabel",
        "Lauren",
        "Georgia",
        "Gracie",
        "Eleanor",
        "Bethany",
        "Madison",
        "Amelie",
        "Isobel",
        "Paige",
        "Lacey",
        "Sienna",
        "Libby",
        "Maisie",
        "Anna",
        "Rebecca",
        "Rosie",
        "Tia",
        "Layla",
        "Maya",
        "Niamh",
        "Zara",
        "Sarah",
        "Lexi",
        "Maddison",
        "Alisha",
        "Sofia",
        "Skye",
        "Nicole",
        "Lexie",
        "Faith",
        "Martha",
        "Harriet",
        "Zoe",
        "Eve",
        "Julia",
        "Aimee",
        "Hollie",
        "Lydia",
        "Evelyn",
        "Alexandra",
        "Maria",
        "Francesca",
        "Tilly",
        "Florence",
        "Alicia",
        "Abbie",
        "Emilia",
        "Courtney",
        "Maryam",
        "Esme",
        "Jack",
        "Oliver",
        "Thomas",
        "Harry",
        "Joshua",
        "Alfie",
        "Charlie",
        "Daniel",
        "James",
        "William",
        "Samuel",
        "George",
        "Joseph",
        "Lewis",
        "Ethan",
        "Mohammed",
        "Dylan",
        "Benjamin",
        "Alexander",
        "Jacob",
        "Ryan",
        "Liam",
        "Jake",
        "Max",
        "Luke",
        "Tyler",
        "Callum",
        "Matthew",
        "Jayden",
        "Oscar",
        "Archie",
        "Adam",
        "Riley",
        "Harvey",
        "Harrison",
        "Lucas",
        "Muhammad",
        "Henry",
        "Isaac",
        "Leo",
        "Connor",
        "Edward",
        "Finley",
        "Logan",
        "Noah",
        "Cameron",
        "Alex",
        "Owen",
        "Rhys",
        "Nathan",
        "Jamie",
        "Michael",
        "Mason",
        "Toby",
        "Aaron",
        "Charles",
        "Ben",
        "Theo",
        "Louis",
        "Freddie",
        "Finlay",
        "Leon",
        "Harley",
        "David",
        "Mohammad",
        "Reece",
        "Kian",
        "Kai",
        "Kyle",
        "Brandon",
        "Hayden",
        "Zachary",
        "Kieran",
        "Luca",
        "Ashton",
        "Bailey",
        "Sebastian",
        "Gabriel",
        "Sam",
        "Evan",
        "Bradley",
        "Elliot",
        "John",
        "Taylor",
        "Joe",
        "Corey",
        "Reuben",
        "Joel",
        "Robert",
        "Ellis",
        "Blake",
        "Aidan",
        "Louie",
        "Christopher",
        "Ewan",
        "Jay",
        "Morgan",
        "Billy",
        "Sean",
        "Zak",
    ];
    let surnames = vec![
        "Roberts",
        "Johnson",
        "Lewis",
        "Walker",
        "Robinson",
        "Wood",
        "Thompson",
        "White",
        "Watson",
        "Jackson",
        "Wright",
        "Green",
        "Harris",
        "Cooper",
        "King",
        "Lee",
        "Martin",
        "Clarke",
        "James",
        "Morgan",
        "Hughes",
        "Edwards",
        "Hill",
        "Moore",
        "Clark",
        "Harrison",
        "Scott",
        "Young",
        "Morris",
        "Hall",
        "Ward",
        "Turner",
        "Carter",
        "Phillips",
        "Mitchell",
        "Patel",
        "Adams",
        "Campbell",
        "Anderson",
        "Allen",
        "Cook",
        "Bailey",
        "Parker",
        "Miller",
        "Davis",
        "Murphy",
        "Price",
        "Bell",
        "Baker",
        "Griffiths",
        "Kelly",
        "Simpson",
        "Marshall",
        "Collins",
        "Bennett",
        "Cox",
        "Richardson",
        "Fox",
        "Gray",
        "Rose",
        "Chapman",
        "Hunt",
        "Robertson",
        "Shaw",
        "Reynolds",
        "Lloyd",
        "Ellis",
        "Richards",
        "Russell",
        "Wilkinson",
        "Khan",
        "Graham",
        "Stewart",
        "Reid",
        "Murray",
        "Powell",
        "Palmer",
        "Holmes",
        "Rogers",
        "Stevens",
        "Walsh",
        "Hunter",
        "Thomson",
        "Matthews",
        "Ross",
        "Owen",
        "Mason",
        "Knight",
        "Kennedy",
        "Butler",
        "Saunders",
        "Lööv",
        "Blyberg",
        "Alanen",
    ];

    let mut all_names = Vec::with_capacity(names.len() * surnames.len());
    for name in names {
        for surname in &surnames {
            let full_name = format!("{} {}", name, surname);
            all_names.push(full_name);
        }
    }

    // println!("{:?}", fuzz_search::fuzzy_search_score("Jonathan Lööv", "Jonis"));

    let search = "Jonathan Loov";

    let best = fuzz_search::best_matches(
        search,
        all_names,
        10,
    )
    .collect::<Vec<_>>();
    println!("{:#?}", best);
}
